     1                                      BOOT_LOAD     equ     0x7C00 ;boot program adress
     2                                  
     3                                      ORG  BOOT_LOAD               ;load adress
     4                                  
     5                                  ;**********************************************
     6                                  ; Macro
     7                                  ;**********************************************
     8                                  %include "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1> 	%rep  %0 - 1
     4                              <1> 		push	%{-1:-1}
     5                              <1> 		%rotate -1
     6                              <1> 	%endrep 
     7                              <1> 	%rotate -1
     8                              <1> 
     9                              <1> 		call	%1
    10                              <1> 
    11                              <1> 	%if 1 < %0
    12                              <1> 		add		sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1> 	%endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
     9                                  
    10                                  ;**********************************************
    11                                  ; Entry Point
    12                                  ;**********************************************
    13                                  
    14                                  entry:
    15                                  
    16                                    ;--------------------------------------------------
    17                                    ; BPB (BIOS Parameter Block)
    18                                    ;--------------------------------------------------
    19                                  
    20 00000000 EB58                      jmp ipl               ; jump to ipl
    21 00000002 90<rept>                  times 90 - ($ - $$) db 0x90
    22                                  
    23                                    ;--------------------------------------------------
    24                                    ; IPL(Initial Program Loader)
    25                                    ;--------------------------------------------------
    26                                  
    27                                  ipl:
    28 0000005A FA                          cli
    29                                  
    30 0000005B B80000                      mov ax, 0x0000       ; AX = 0x0000
    31 0000005E 8ED8                        mov ds, ax           ; DS = 0x0000
    32 00000060 8EC0                        mov es, ax           ; ES = 0x0000
    33 00000062 8ED0                        mov ss, ax           ; SS = 0x0000
    34 00000064 BC007C                      mov sp, BOOT_LOAD    ; SP = 0x7C00
    35                                  
    36 00000067 FB                          sti                  ; alow 
    37                                  
    38 00000068 8816[8400]                  mov [BOOT.DRIVE], dl ; save bootdrive
    39                                  
    40                                    ;--------------------------------------------------
    41                                    ; output chars
    42                                    ;--------------------------------------------------
    43 0000006C 68[7700]E8140083C4-        cdecl puts, .s0 
    43 00000074 02                 
    44                                    ;--------------------------------------------------
    45                                    ; End of process
    46                                    ;--------------------------------------------------
    47                                  
    48 00000075 EBFE                      jmp $                 ;while(true)
    49                                  
    50                                    ;--------------------------------------------------
    51                                    ; Data
    52                                    ;--------------------------------------------------
    53 00000077 426F6F74696E672E2E-     .s0 db "Booting...", 0x0A, 0x0D, 0
    53 00000080 2E0A0D00           
    54                                  
    55                                  ALIGN 2, db 0
    56                                  BOOT:                   ; infomation about boot drive
    57 00000084 0000                    .DRIVE: dw 0            ; number of drive
    58                                  
    59                                  
    60                                  ;**********************************************
    61                                  ; modules
    62                                  ;**********************************************
    63                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1>   ;------------------------------------------------------------
     3                              <1>   ; construct stackframe
     4                              <1>   ;------------------------------------------------------------
     5                              <1> 
     6 00000086 55                  <1>   push bp
     7 00000087 89E5                <1>   mov bp, sp
     8                              <1> 
     9                              <1>   ;-----------------------------------------------------------
    10                              <1>   ; save register 
    11                              <1>   ;-----------------------------------------------------------
    12 00000089 50                  <1>   push ax
    13 0000008A 53                  <1>   push bx
    14 0000008B 56                  <1>   push si
    15                              <1> 
    16                              <1>   ;-----------------------------------------------------------
    17                              <1>   ; get args
    18                              <1>   ;-----------------------------------------------------------
    19 0000008C 8B7604              <1>   mov si, [bp + 4]
    20                              <1> 
    21                              <1>   ;-----------------------------------------------------------
    22                              <1>   ; begining of process
    23                              <1>   ;-----------------------------------------------------------
    24 0000008F B40E                <1>   mov ah, 0x0E              ; teltype char 
    25 00000091 BB0000              <1>   mov bx, 0x0000            ; set o page number char color
    26 00000094 FC                  <1>   cld                       ; DF = 0 add address
    27                              <1>                             ; do
    28                              <1> .10L:                       ; {
    29 00000095 AC                  <1>   lodsb                     ; AL = *AL++;
    30                              <1>                             ;
    31 00000096 3C00                <1>   cmp al, 0                 ; if (0 == AL)
    32 00000098 7404                <1>   je   .10E                 ;   break;
    33                              <1>                             ; 
    34 0000009A CD10                <1>   int 0x10                  ; Int10(0x0E, AL); 
    35 0000009C EBF7                <1>   jmp .10L                  ; while(1);
    36                              <1> .10E:
    37                              <1> 
    38                              <1> 
    39                              <1>   ;-----------------------------------------------------------
    40                              <1>   ; return of register
    41                              <1>   ;-----------------------------------------------------------
    42 0000009E 5E                  <1>   pop si
    43 0000009F 5B                  <1>   pop bx
    44 000000A0 58                  <1>   pop ax
    45                              <1> 
    46                              <1>   ;-----------------------------------------------------------
    47                              <1>   ; deconstruct stackframe
    48                              <1>   ;-----------------------------------------------------------
    49 000000A1 89EC                <1>   mov sp, bp
    50 000000A3 5D                  <1>   pop bp
    51                              <1> 
    52 000000A4 C3                  <1>   ret
    64                                    
    65                                  ;**********************************************
    66                                  ; Boot Flag(End of Head 512 bytes)
    67                                  ;**********************************************
    68 000000A5 00<rept>                  times 510 - ($ - $$) db 0x00
    69 000001FE 55AA                      db 0x55, 0xAA
    70                                  
    71                                  
    72                                  
